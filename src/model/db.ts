/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type {ColumnType} from "kysely";
import type {ChannelID, ChannelYTID, VideoID, VideoYTID} from "./override";

export enum ModelType {
  GENRE_CLASSIFIER = "genre_classifier",
  IS_MUSIC_CLASSIFIER = "is_music_classifier",
  NER = "ner",
}

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Category {
  id: Generated<number>;
  name: string;
}

export interface Channel {
  id: Generated<ChannelID>;
  name: string;
  yt_id: ChannelYTID;
}

export interface IsMusicVideo {
  created_at: Generated<Timestamp>;
  is_music: boolean;
  submitted_by_id: number;
  video_id: VideoID;
}

export interface IsMusicVideoPrediction {
  created_at: Generated<Timestamp>;
  is_music: boolean;
  submitted_by_id: number;
  video_id: VideoID;
}

export interface Listened {
  listened_at: Generated<Timestamp>;
  user_id: number;
  video_id: VideoID;
}

export interface MainCategory {
  id: number;
  name: string;
}

export interface Model {
  id: Generated<number>;
  type: ModelType;
  version: string;
}

export interface NerResult {
  created_at: Generated<Timestamp>;
  language: string;
  ner_result: Json;
  submitted_by_id: number;
  video_id: VideoID;
}

export interface Role {
  id: Generated<number>;
  name: string;
}

export interface User {
  handle: Generated<string>;
  id: Generated<number>;
  password_hash: string;
  username: string;
}

export interface UserRole {
  role_id: number;
  user_id: number;
}

export interface Video {
  channel_id: ChannelID;
  default_language: string;
  duration: number;
  id: Generated<VideoID>;
  main_category_id: number | null;
  yt_id: VideoYTID;
}

export interface VideoCategory {
  category_id: number;
  video_id: VideoID;
}

export interface VideoMetadata {
  description: string | null;
  language: string;
  title: string;
  video_id: VideoID;
}

export interface DB {
  category: Category;
  channel: Channel;
  is_music_video: IsMusicVideo;
  is_music_video_prediction: IsMusicVideoPrediction;
  listened: Listened;
  main_category: MainCategory;
  model: Model;
  ner_result: NerResult;
  role: Role;
  user: User;
  user_role: UserRole;
  video: Video;
  video_category: VideoCategory;
  video_metadata: VideoMetadata;
}
